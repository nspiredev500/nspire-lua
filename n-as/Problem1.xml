
<prob xmlns="urn:TI.Problem" ver="1.0" pbname="n-as">
<sym><e t="5" f="0" c="0"><n>libs</n><v>&quot;---  TI-Lua input library by nspiredev500  ---
--[[
	You have to supply a on.input function.
	The first argument is a input string. It's either the char of the pressed key or one of the special key strings.
	The second arguments is a whether it is a digit.
	The third argument is whether it is a alphabetic character.
	The fourth argument is whether it is a punctuation character ('.', ',', '!',...)
	The fifth argument is whether the character is a whitespace
	The sixth argument is the string length.
	
	The special key strings are:
	&quot;&quot;enter&quot;&quot;
	&quot;&quot;esc&quot;&quot;
	&quot;&quot;del&quot;&quot; (delete key, only available in the computer software)
	&quot;&quot;tab&quot;&quot;
	&quot;&quot;bsp&quot;&quot; (backspace, del)
	&quot;&quot;ret&quot;&quot; (return, the little arrow on the bottom-right)
	&quot;&quot;cont&quot;&quot; (context menu, ctrl+menu)
	&quot;&quot;btab&quot;&quot; (backtab, shift+tab)
	&quot;&quot;clear&quot;&quot; (ctrl+del)
	&quot;&quot;help&quot;&quot; (ctrl+trig)
	&quot;&quot;up&quot;&quot;
	&quot;&quot;down&quot;&quot;
	&quot;&quot;left&quot;&quot;
	&quot;&quot;right&quot;&quot;
	&quot;&quot;cut&quot;&quot; ctrl + x
	&quot;&quot;copy&quot;&quot; ctrl + c
	&quot;&quot;paste&quot;&quot; ctrl + v
	
	And the strings from the special Nspire keys:
	&quot;&quot;^2&quot;&quot; (x^2 key)
	&quot;&quot;√(&quot;&quot; (ctrl + x^2 key)
	&quot;&quot;root(&quot;&quot; (ctrl + ^ key)
	&quot;&quot;exp(&quot;&quot; (e^x key)
	&quot;&quot;ln(&quot;&quot; (ctrl + e^x key)
	&quot;&quot;10^(&quot;&quot;
	&quot;&quot;log(&quot;&quot; (ctrl + 10^x key)
	string.char(239)..string.char(128)..string.char(128) (EE key)
	&quot;&quot;\&quot;&quot; (shift + division)
	string.char(226)..string.char(136)..string.char(171)..&quot;&quot;(&quot;&quot; (shift + plus)
	string.char(239)..string.char(128)..string.char(136)..&quot;&quot;(&quot;&quot; (shift + minus)
	string.char(226)..string.char(136)..string.char(246) (the sign minus)
	&quot;&quot;_&quot;&quot; (ctrl + space)
	
	
	The input table contains definitions for some of the hard-to-write ones.
	
	
]]--

input = {
sq=&quot;&quot;^2&quot;&quot;,
sqrt=&quot;&quot;√(&quot;&quot;,
root=&quot;&quot;root(&quot;&quot;,
exp=&quot;&quot;exp(&quot;&quot;,
ln=&quot;&quot;ln(&quot;&quot;,
pow10=&quot;&quot;10^(&quot;&quot;,
log=&quot;&quot;log(&quot;&quot;,
ee=string.char(239)..string.char(128)..string.char(128),
int=string.char(226)..string.char(136)..string.char(171)..&quot;&quot;(&quot;&quot;,
deriv=string.char(239)..string.char(128)..string.char(136)..&quot;&quot;(&quot;&quot;,
mathmin=string.char(226)..string.char(136)..string.char(146)
}



function on.charIn(c)
	local len = c:len()
	if len == 1 then
		if string.match(c,&quot;&quot;%d&quot;&quot;) ~= nil then
			on.input(c,true,false,false,false,len)
			return
		end
		if string.match(c,&quot;&quot;%a&quot;&quot;) ~= nil then
			on.input(c,false,true,false,false,len)
			return
		end
		if string.match(c,&quot;&quot;%p&quot;&quot;) ~= nil then
			on.input(c,false,false,true,false,len)
			return
		end
		if string.match(c,&quot;&quot;%s&quot;&quot;) ~= nil then
			on.input(c,false,false,false,true,len)
			return
		end
	end
	on.input(c,false,false,false,false,len)
end

function on.copy()
	on.input(&quot;&quot;copy&quot;&quot;,false,false,false,false,string.len(&quot;&quot;copy&quot;&quot;))
end

function on.paste()
	on.input(&quot;&quot;paste&quot;&quot;,false,false,false,false,string.len(&quot;&quot;paste&quot;&quot;))
end

function on.cut()
	on.input(&quot;&quot;cut&quot;&quot;,false,false,false,false,string.len(&quot;&quot;cut&quot;&quot;))
end

function on.enterKey()
	on.input(&quot;&quot;enter&quot;&quot;,false,false,false,false,string.len(&quot;&quot;enter&quot;&quot;))
end

function on.escapeKey()
	on.input(&quot;&quot;esc&quot;&quot;,false,false,false,false,string.len(&quot;&quot;esc&quot;&quot;))
end

function on.tabKey()
	on.input(&quot;&quot;tab&quot;&quot;,false,false,false,false,string.len(&quot;&quot;tab&quot;&quot;))
end

function on.deleteKey()
	on.input(&quot;&quot;del&quot;&quot;,false,false,false,false,string.len(&quot;&quot;del&quot;&quot;))
end

function on.backspaceKey()
	on.input(&quot;&quot;bsp&quot;&quot;,false,false,false,false,string.len(&quot;&quot;bsp&quot;&quot;))
end

function on.returnKey()
	on.input(&quot;&quot;ret&quot;&quot;,false,false,false,false,string.len(&quot;&quot;ret&quot;&quot;))
end

function on.contextMenu()
	on.input(&quot;&quot;cont&quot;&quot;,false,false,false,false,string.len(&quot;&quot;cont&quot;&quot;))
end

function on.backtabKey()
	on.input(&quot;&quot;btab&quot;&quot;,false,false,false,false,string.len(&quot;&quot;btab&quot;&quot;))
end

function on.clearKey()
	on.input(&quot;&quot;clear&quot;&quot;,false,false,false,false,string.len(&quot;&quot;clear&quot;&quot;))
end

function on.help()
	on.input(&quot;&quot;help&quot;&quot;,false,false,false,false,string.len(&quot;&quot;help&quot;&quot;))
end

function on.arrowUp()
	on.input(&quot;&quot;up&quot;&quot;,false,false,false,false,string.len(&quot;&quot;up&quot;&quot;))
end

function on.arrowDown()
	on.input(&quot;&quot;down&quot;&quot;,false,false,false,false,string.len(&quot;&quot;down&quot;&quot;))
end

function on.arrowLeft()
	on.input(&quot;&quot;left&quot;&quot;,false,false,false,false,string.len(&quot;&quot;left&quot;&quot;))
end

function on.arrowRight()
	on.input(&quot;&quot;right&quot;&quot;,false,false,false,false,string.len(&quot;&quot;right&quot;&quot;))
end


---  end lua input library  ------  TI-Lua window manager library by nspiredev500  ---
--[[
	This is a window manager library.
	It requires my input library.
	
	
	
	
	
	
]]--


window = {}
window.window = class()
window.canvas = class()
window.decoration = class()
window.button = class()
window.checkbox = class()
window.label = class()
window.textField = class()
window.textEditor = class()
window.bare = class(decoration)
window._initialized = false
window._w = 0
window._h = 0
window._windows = {}
window._moving = nil
window._grabx = 0
window._graby = 0
window._damaged = {}

function window._setVisible(self,vis)
	self.visible = vis
end
window.canvas.setVisible = window._setVisible
function window.canvas:init(x,y,w,h,draw,event)
	self.x = x
	self.y = y
	self.width = w
	self.height = h
	self.draw = draw
	self.event = event
	self.visible = true
end
function window.canvas:paint(w,gc)
	gc:clipRect(&quot;&quot;set&quot;&quot;,w.x+self.x,w.y+self.y,self.width,self.height)
	self.draw(self,w,gc)
	gc:clipRect(&quot;&quot;reset&quot;&quot;)
end
function window._recomputeSize(self,gc)
	self.width = gc:getStringWidth(self.text)
	self.height = gc:getStringHeight(self.text)
end
function window._recomputeSizeFont(self,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	self.width = gc:getStringWidth(self.text)
	self.height = gc:getStringHeight(self.text)
	gc:setFont(ff,ft,fs)
end

function window.button:init(x,y,text,onPress)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	self.visible = true
	self.x = x
	self.y = y
	self.text = text
	self.onPress = onPress
	self.ff = &quot;&quot;sansserif&quot;&quot;
	self.ftype = &quot;&quot;r&quot;&quot;
	self.fsize = 11
	platform.withGC(window._recomputeSize,self)
end
function window.button:setFont(ff,ft,size,win)
	self.ff = ff
	self.ftype = ft
	self.fsize = size
	platform.withGC(window._recomputeSizeFont,self)
	window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
end
window.button.setVisible = window._setVisible
function window.button:paint(w,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	gc:setColorRGB(0,0,0)
	gc:drawRect(w.x+self.x,w.y+self.y,self.width,self.height)
	gc:drawString(self.text,w.x+self.x,w.y+self.y,&quot;&quot;top&quot;&quot;)
	gc:setFont(ff,ft,fs)
end
function window.button:event(e,d,a,p,w,l,m,x,y,win)
	if e == &quot;&quot;mouseup&quot;&quot; then
		self.onPress()
	end
end
function window.checkbox:init(x,y,w,h,checked)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	self.visible = true
	self.x = x
	self.y = y
	self.width = w
	self.height = h
	self.checked = false
end
window.checkbox.setVisible = window._setVisible
function window.checkbox:paint(w,gc)
	gc:setColorRGB(0,0,0)
	gc:drawRect(w.x+self.x,w.y+self.y,self.width,self.height)
	if self.checked then
		gc:drawLine(w.x+self.x,w.y+self.y,w.x+self.x+self.width,w.y+self.y+self.height)
		gc:drawLine(w.x+self.x+self.width,w.y+self.y,w.x+self.x,w.y+self.y+self.height)
	end
end
function window.checkbox:isChecked()
	return self.checked
end
function window.checkbox:check(check)
	self.checked = check
end
function window.checkbox:event(e,d,a,p,w,l,m,x,y,win)
	if e == &quot;&quot;mouseup&quot;&quot; then
		self.checked = not self.checked
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
end

function window.label:init(x,y,text)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	self.visible = true
	self.x = x
	self.y = y
	self.ff = &quot;&quot;sansserif&quot;&quot;
	self.ftype = &quot;&quot;r&quot;&quot;
	self.fsize = 11
	if text == nil then
		self.text = &quot;&quot;&quot;&quot;
	else
		self.text = tostring(text)
	end
	platform.withGC(window._recomputeSize,self)
end
function window.label:setText(text,win)
	self.text = text
	platform.withGC(window._recomputeSize,self)
	window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
end
function window.label:paint(w,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	gc:setColorRGB(0,0,0)
	gc:drawString(self.text,w.x+self.x,w.y+self.y,&quot;&quot;top&quot;&quot;)
	gc:setFont(ff,ft,fs)
end
function window.label:event(e,d,a,p,w,l,m,x,y,win)
end
function window.label:setFont(ff,ft,size,win)
	self.ff = ff
	self.ftype = ft
	self.fsize = size
	platform.withGC(window._recomputeSizeFont,self)
	window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
end
function window.textField:init(x,y,text,width,height)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	assert(tonumber(width),&quot;&quot;window: width has to be a number&quot;&quot;)
	assert(tonumber(height),&quot;&quot;window: height has to be a number&quot;&quot;)
	self.visible = true
	self.x = x
	self.y = y
	self.width = width
	self.height = height
	self.cursor = 0
	self.scroll = 0
	self.ff = &quot;&quot;sansserif&quot;&quot;
	self.ftype = &quot;&quot;r&quot;&quot;
	self.fsize = 11
	if text == nil then
		self.text = &quot;&quot;&quot;&quot;
	else
		self.text = tostring(text)
	end
	self.filter = nil
end
function window.textField:registerFilter(filter)
	self.filter = filter
end
function window.textField:paint(w,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	gc:setColorRGB(0,0,0)
	gc:drawRect(w.x+self.x,w.y+self.y,self.width,self.height)
	gc:clipRect(&quot;&quot;set&quot;&quot;,w.x+self.x,w.y+self.y,self.width,self.height)
	gc:drawString(self.text,w.x+self.x+2+self.scroll,w.y+self.y,&quot;&quot;top&quot;&quot;)
	local scr = gc:getStringWidth(self.text:sub(1,self.cursor))
	gc:fillRect(w.x+self.x+scr+2+self.scroll,w.y+self.y+2,1,self.height-4)
	gc:clipRect(&quot;&quot;reset&quot;&quot;)
	gc:setFont(ff,ft,fs)
end
function window.textField._adjustScroll(self,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	local w = gc:getStringWidth(self.text:sub(1,self.cursor)) + self.scroll + 3
	if w &gt; self.width then
		self.scroll = self.scroll - (w - self.width) - 1
	end
	if w - gc:getStringWidth(self.text:sub(self.cursor,self.cursor)) &lt; 2 then
		self.scroll = self.scroll - w + gc:getStringWidth(self.text:sub(self.cursor,self.cursor)) + 3
	end
	gc:setFont(ff,ft,fs)
end
function window.textField:event(e,d,a,p,w,l,m,x,y,win)
	if self.filter ~= nil then
		if self.filter(e,d,a,p,w,l,m,x,y,win) == true then
			return
		end
	end
	if l == 1 then
		self.text = self.text:sub(1,self.cursor) .. e .. self.text:sub(self.cursor+1)
		self.cursor = self.cursor + 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;bsp&quot;&quot; then
		local c = self.cursor - 1
		if c &lt; 0 then
			c = 0
		end
		self.text = self.text:sub(1,c) .. self.text:sub(self.cursor+1)
		self.cursor = self.cursor - 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;left&quot;&quot; then
		self.cursor = self.cursor - 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;right&quot;&quot; then
		self.cursor = self.cursor + 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if self.cursor &lt; 0 then
		self.cursor = 0
	end
	if self.cursor &gt; self.text:len() then
		self.cursor = self.text:len()
	end
	platform.withGC(window.textField._adjustScroll,self)
end
function window.textField:getText()
	return self.text
end
function window.textField:setText(text)
	self.text = text
end
function window.textField:setFont(ff,ft,size,win)
	self.ff = ff
	self.ftype = ft
	self.fsize = size
	window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
end
function window.textEditor:init(x,y,text,width,height)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	assert(tonumber(width),&quot;&quot;window: width has to be a number&quot;&quot;)
	assert(tonumber(height),&quot;&quot;window: height has to be a number&quot;&quot;)
	self.visible = true
	self.width = width
	self.height = height
	self.x = x
	self.y = y
	self.ff = &quot;&quot;sansserif&quot;&quot;
	self.ftype = &quot;&quot;r&quot;&quot;
	self.fsize = 11
	self.cursor = 0
	self.scroll = 0
	self.scrollline = 0
	self.showlines = false
	self.line = 1
	self.text = {}
	self.selectline = 0
	self.selectcursor = 0;
	self.select = false
	if text == nil then
		self.text[1] = &quot;&quot;&quot;&quot;
	else
		self.text[1] = tostring(text)
	end
	self.filter = nil
	self.readonly = false
end
function window.textEditor:registerFilter(filter)
	self.filter = filter
end
function window.textEditor:showLines(show)
	self.showlines = show
end
function window.textEditor:paint(w,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	gc:setColorRGB(0,0,0)
	gc:drawRect(w.x+self.x,w.y+self.y,self.width,self.height)
	gc:clipRect(&quot;&quot;set&quot;&quot;,w.x+self.x,w.y+self.y,self.width,self.height)
	local add = 0
	if self.showlines then
		add = 50
	end
	local h = 0
	local lineh = -100
	for i, j in ipairs(self.text) do
		if i &gt; self.scrollline then
			if self.showlines then
				gc:drawString(tostring(i),w.x+self.x+2+self.scroll,w.y+self.y+h,&quot;&quot;top&quot;&quot;)
			end
			gc:drawString(j,w.x+self.x+2+self.scroll+add,w.y+self.y+h,&quot;&quot;top&quot;&quot;)
			if i == self.line then
				lineh = h
			end
			h = h + gc:getStringHeight(j)
		end
	end
	local scr = gc:getStringWidth(self.text[self.line]:sub(1,self.cursor))
	gc:fillRect(w.x+self.x+scr+2+self.scroll+add,w.y+self.y+lineh+2,1,gc:getStringHeight(self.text[self.line])-4)
	gc:clipRect(&quot;&quot;reset&quot;&quot;)
	gc:setFont(ff,ft,fs)
end
function window.textEditor:setReadOnly(read)
	self.readonly = read
end
function window.textEditor._adjustScroll(self,gc)
	local ff,ft,fs = gc:setFont(self.ff,self.ftype,self.fsize)
	local w = gc:getStringWidth(self.text[self.line]:sub(1,self.cursor)) + self.scroll + 3
	if w &gt; self.width then
		self.scroll = self.scroll - (w - self.width) - 1
	end
	if w - gc:getStringWidth(self.text[self.line]:sub(self.cursor,self.cursor)) &lt; 2 then
		self.scroll = self.scroll - w + gc:getStringWidth(self.text[self.line]:sub(self.cursor,self.cursor)) + 3
	end
	if self.line &lt;= self.scrollline then
		self.scrollline = self.line - 1
	end
	local lineh = -100
	local h = 0
	for i, j in ipairs(self.text) do
		if i &gt; self.scrollline then
			if i == self.line then
				lineh = h
			end
			h = h + gc:getStringHeight(j)
		end
	end
	if lineh + gc:getStringHeight(self.text[self.line]) &gt; self.height then
		local lines = 0
		local h = 0
		for i, j in ipairs(self.text) do
			if i &gt; self.scrollline then
				h = h + gc:getStringHeight(j)
				lines = lines + 1
				if h &gt;= lineh + gc:getStringHeight(self.text[self.line]) - self.height then
					self.scrollline = self.scrollline + lines
					gc:setFont(ff,ft,fs)
					return
				end
			end
		end
	end
	gc:setFont(ff,ft,fs)
end
function window.textEditor:event(e,d,a,p,w,l,m,x,y,win)
	if self.filter ~= nil then
		if self.filter(e,d,a,p,w,l,m,x,y,win) == true then
			return
		end
	end
	if l == 1 and not self.readonly then
		self.text[self.line] = self.text[self.line]:sub(1,self.cursor) .. e .. self.text[self.line]:sub(self.cursor+1)
		self.cursor = self.cursor + 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;clear&quot;&quot; then
		self.select = true
		self.selectline = self.line
		self.selectcursor = cursor
	end
	if e == &quot;&quot;bsp&quot;&quot; and not self.readonly then
		local c = self.cursor - 1
		if c &lt; 0 then
			c = 0
		end
		if self.cursor == 0 and self.line ~= 1 then
			self.line = self.line - 1
			self.cursor = self.text[self.line]:len()
			self.text[self.line] = self.text[self.line] .. self.text[self.line+1]
			table.remove(self.text,self.line+1)
		else
			self.text[self.line] = self.text[self.line]:sub(1,c) .. self.text[self.line]:sub(self.cursor+1)
			self.cursor = self.cursor - 1
		end
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;enter&quot;&quot; and not self.readonly then
		table.insert(self.text,self.line+1,self.text[self.line]:sub(self.cursor+1))
		self.text[self.line] = self.text[self.line]:sub(1,self.cursor)
		self.cursor = 0
		self.line = self.line + 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;up&quot;&quot; then
		if self.line &gt; 1 then
			self.line = self.line - 1
			if self.text[self.line]:len() &lt; self.cursor then
				self.cursor = self.text[self.line]:len()
			end
			window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
		end
	end
	if e == &quot;&quot;down&quot;&quot; then
		if self.line &lt; #self.text then
			self.line = self.line + 1
			if self.text[self.line]:len() &lt; self.cursor then
				self.cursor = self.text[self.line]:len()
			end
			window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
		end
	end
	if e == &quot;&quot;left&quot;&quot; then
		self.cursor = self.cursor - 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == &quot;&quot;right&quot;&quot; then
		self.cursor = self.cursor + 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if self.cursor &lt; 0 then
		if self.line ~= 1 then
			self.line = self.line - 1
			self.cursor = self.text[self.line]:len()
		else
			self.cursor = 0
		end
	end
	if self.cursor &gt; self.text[self.line]:len() then
		if self.line &lt; #self.text then
			self.cursor = 0
			self.line = self.line +1
		else
			self.cursor = self.text[self.line]:len()
		end
	end
	platform.withGC(window.textEditor._adjustScroll,self)
end
function window.textEditor:getText()
	local t = &quot;&quot;&quot;&quot;
	for i, j in ipairs(self.text) do
		t = t .. j .. &quot;&quot;\n&quot;&quot;
	end
	t = string.sub(t,1,string.len(t)-1) -- cut off the last newline
	return t
end
function window.textEditor:setText(text)
	self.text = {}
	for line in text:gmatch(&quot;&quot;([^\n]*)(\n?)&quot;&quot;) do
		table.insert(self.text,line)
	end
	self.cursor = 0
	self.line = 1
	self.scroll = 0
	self.scrollline = 0
	self.selectline = 0
	self.selectcursor = 0;
	self.select = false
end
function window.textEditor:getLine(l)
	return self.text[l]
end
function window.textEditor:setFont(ff,ft,size,win)
	self.ff = ff
	self.ftype = ft
	self.fsize = size
	window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
end



function window.window:init(x,y,width,height,visible,name,decoration)
	assert(tonumber(width),&quot;&quot;window: width has to be a number&quot;&quot;)
	assert(tonumber(height),&quot;&quot;window: height has to be a number&quot;&quot;)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	self.components = {}
	self.width = width
	self.height = height
	self.x = x
	self.y = y
	self.fullscreen = false
	if visible then
		self.visible = true
	else
		self.visible = false
	end
	if name ~= nil then
		if tostring(name) == nil then
			error(&quot;&quot;window: name has to be a string&quot;&quot;)
		end
		self.name = tostring(name)
	end
	if decoration == nil then
		self.decoration = window.decoration(20,1,1,1)
	else
		self.decoration = decoration
	end
	table.insert(window._windows,self)
	window._focused = self
	local w = self
	local d = w.decoration
	window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
end
function window.window:registerFilter(filter)
	self.filter = filter
end
function window.window:add(c)
	table.insert(self.components,c)
	window._damage(self.x+c.x,self.y+c.y,c.width,c.height)
end
function window.window:visible()
	return self.visible
end

function window.window:setVisible(visible)
	if visible then
		if self.visible ~= true then
			self.visible = true
			local w = self
			local d = w.decoration
			window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
		end
	else
		self.visible = false
	end
end

function window.window:size()
	return self.size
end

function window.window:position()
	return self.relx, self.rely
end

function window.window:setFullscreen(full)
	self.fullscreen = full
	if full == true then
		self.x = 0
		self.y = 0
		self.width = window._w
		self.h = window._h
	end
	window._damage(0,0,window._w,window._h)
end

function window.window:setPosition(x,r)
	assert(tonumber(x),&quot;&quot;window: x has to be a number&quot;&quot;)
	assert(tonumber(y),&quot;&quot;window: y has to be a number&quot;&quot;)
	local w = self
	local d = w.decoration
	window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
	self.x = x
	self.y = y
	window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
end

function window.window:setSize(width,height)
	assert(tonumber(width),&quot;&quot;window: width has to be a number&quot;&quot;)
	assert(tonumber(height),&quot;&quot;window: height has to be a number&quot;&quot;)
	local w = self
	local d = w.decoration
	window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
	self.width = width
	self.height = height
	window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
end

function window.window:destroy()
	if window._moving == self then
		window._moving = nil
	end
	if window._focused == self then
		window._focused = nil
	end
	for i,j in ipairs(window._windows) do
		if j == self then
			table.remove(window._windows,i)
			local w = self
			local d = w.decoration
			window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
			return
		end
	end
end

function window.window:paint(gc)
	gc:setColorRGB(255,255,255)
	gc:fillRect(self.x,self.y,self.width,self.height)
	for i,j in ipairs(self.components) do
		if j.visible == true then
			j:paint(self,gc)
		end
	end
end

function window.window:focus(c)
	for i,j in ipairs(self.components) do
		if j == c then
			self.focused = j
			return
		end
	end
end

function window.window:event(e,d,a,p,w,l,m,x,y)
	if self.filter ~= nil then
		if self.filter(e,d,a,p,w,l,m,x,y,self) == true then
			return
		end
	end
	if m == true then
		for i,j in ipairs(self.components) do
			if x &gt;= self.x+j.x and x &lt;= self.x+j.x+j.width and y &gt;= self.y+j.y and y &lt;= self.y+j.y+j.height then
				self.focused = j
				j:event(e,d,a,p,w,l,m,x-self.x,y-self.y,self)
				return
			end
		end
	else
		if self.focused ~= nil and self.focused.visible == true then
			self.focused:event(e,d,a,p,w,l,m,x,y,self)
			return
		end
	end
end


function window.decoration:init(top,bottom,left,right,r,g,b)
	assert(tonumber(top),&quot;&quot;window: top has to be a number&quot;&quot;)
	assert(tonumber(bottom),&quot;&quot;window: bottom has to be a number&quot;&quot;)
	assert(tonumber(left),&quot;&quot;window: left has to be a number&quot;&quot;)
	assert(tonumber(right),&quot;&quot;window: right has to be a number&quot;&quot;)
	self.top = top
	self.bottom = bottom
	self.left = left
	self.right = right
	if tonumber(r) == nil then
		self.r = 255
	else
		self.r = r
	end
	if tonumber(g) == nil then
		self.g = 255
	else
		self.g = g
	end
	if tonumber(b) == nil then
		self.b = 255
	else
		self.b = b
	end
end

function window.decoration:paint(gc,w)
	gc:setColorRGB(0,0,0)
	gc:fillRect(w.x-self.left,w.y-self.top,self.left,w.height+self.top+self.bottom)
	gc:fillRect(w.x+w.width,w.y-self.top,self.right,w.height+self.top+self.bottom)
	
	gc:fillRect(w.x-self.left,w.y+w.height,w.width+self.left+self.right,self.bottom)
	gc:drawRect(w.x-self.left,w.y-self.top,w.width+self.left,self.top-1)
	
	gc:setColorRGB(self.r,self.g,self.b)
	gc:fillRect(w.x,w.y-self.top+1,w.width,self.top-2)
	
	gc:setColorRGB(0,0,0)
	gc:drawString(w.name,w.x,w.y-self.top,&quot;&quot;top&quot;&quot;)
end

function window.decoration:setColor(r,g,b)
	if tonumber(r) == nil then
		self.r = 255
	else
		self.r = r
	end
	if tonumber(g) == nil then
		self.g = 255
	else
		self.g = g
	end
	if tonumber(b) == nil then
		self.b = 255
	else
		self.b = b
	end
	window._damage(0,0,window._w,window._h) -- the decoration doesn't know where the window is, so do a full redraw
end

function window.bare:init()
	window.decoration.init(self,1,5,1,1)
end

function window.bare:paint(gc)
	
	
	
	
end

function on.grabDown(x,y)
	
end

function on.grabUp(x,y)
	if window._moving ~= nil then
		local w = window._moving
		local self = w.decoration
		if w.x-self.left &lt; 0 then
			w.x = self.left
		end
		if w.y-self.top &lt; 0 then
			w.y = self.top
		end
		window._moving = nil
		cursor.set(&quot;&quot;default&quot;&quot;)
		return
	end
	for i = #window._windows, 1, -1 do
		local w = window._windows[i]
		local self = w.decoration
		if x &gt; w.x-self.left and x &lt; w.x+w.width+self.right and y &gt; w.y-self.top and y &lt; w.y then
			window._moving = w
			window._grabx = x - w.x
			window._graby = y - w.y
			if i ~= #window._windows then
				table.remove(window._windows,i)
				table.insert(window._windows,w)
				local d = w.decoration
				window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
			end
			cursor.set(&quot;&quot;drag grab&quot;&quot;)
			return
		end
	end
end


function on.mouseDown(x,y)
	
end

function on.mouseUp(x,y)
	for i = #window._windows, 1, -1 do
		local w = window._windows[i]
		if x &gt;= w.x and x &lt;= w.x+w.width and y &gt;= w.y and y &lt;= w.y+w.height then
			window._focused = w
			if i ~= #window._windows then
				table.remove(window._windows,i)
				table.insert(window._windows,w)
				local d = w.decoration
				window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
			end
			w:event(&quot;&quot;mouseup&quot;&quot;,false,false,false,false,string.len(&quot;&quot;mouseup&quot;&quot;),true,x,y)
			return
		end
	end
	window._focused = nil
end

function window.focus(w)
	for i,j in ipairs(window._windows) do
		if j == w then
			window._focused = j
			if i ~= #window._windows then
				table.remove(window._windows,i)
				table.insert(window._windows,w)
				local d = w.decoration
				window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
			end
			return
		end
	end
end
function window._damage(x,y,w,h)
	if w == nil then
	error(&quot;&quot;damage width == nil&quot;&quot;,2)
	end
	table.insert(window._damaged,{x = x, y = y, w = w, h = h})
	platform.window:invalidate(x,y,w,h)
end

function on.mouseMove(x,y)
	if window._moving ~= nil then
		local w = window._moving
		local oldx = w.x
		local oldy = w.y
		window._moving.x = x - window._grabx
		window._moving.y = y - window._graby
		local d = w.decoration
		window._damage(w.x-d.left,w.y-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
		window._damage(oldx-d.left,oldy-d.top,w.width+d.left+d.right,w.height+d.top+d.bottom)
	end
end


function on.input(e,d,a,p,w,l)
	if window._focused ~= nil and window._focused.visible == true then
		window._focused:event(e,d,a,p,w,l,false,0,0)
	end
end
function on.paint(gc)
	if window._initialized == false then
		window._w = platform.window:width()
		window._h = platform.window:height()
		window._initialized = true
		window._damage(0,0,window._w,window._h)
	end
	for i, j in ipairs(window._damaged) do
		local x = j.x
		local y = j.y
		local w = j.w
		local h = j.h
		for k, l in ipairs(window._windows) do
			if l.visible ~= false then
				local d = l.decoration
				if (not (x &gt;= l.x + l.width + d.right or l.x - d.left &gt;= x + w)) and (not (y &gt;= l.y + l.height + d.bottom or l.y - d.top &gt;= y + h)) then
					if not l.fullscreen == true then
						l.decoration:paint(gc,l)
					end
					l:paint(gc)
				end
			end
		end
	end
	if #window._damaged == 0 then
		for i,w in ipairs(window._windows) do
			if w.visible ~= false then
				if not w.fullscreen == true then
					w.decoration:paint(gc,w)
				end
				w:paint(gc)
			end
		end
	end
	window._damaged = {}
	--[[
	gc:setColorRGB(255,255,255)
	gc:fillRect(0,0,window._w,window._h)
	for i,w in ipairs(window._windows) do
		if not w.fullscreen == true then
			w.decoration:paint(gc,w)
		end
		w:paint(gc)
	end
	]]--
end













---  end window manager library  ---&quot;</v></e></sym>
<card clay="0" h1="1000" h2="0" w1="1000" w2="0">
<isDummyCard>0</isDummyCard>
<flag>0</flag>
<wdgt xmlns:np="urn:TI.Notepad" type="TI.Notepad" ver="2.0">
	<np:mFlags>1024</np:mFlags>
	<np:value>3</np:value>
	<np:fmtxt>&lt;r2dtotree version="1"&gt;
&lt;formatManager tableSize="2" capacity="10"&gt;;
		&lt;formatEntry entryIndex="0" entryID="0" entryRefCnt="2147483647" tc="1" fc="268435199" fs="11" fst="1" cc="0" fest="0" feun="0" fesub="0" fesup="0" fn0="TI-Nspire Sans"&gt;&lt;/formatEntry&gt;
		&lt;formatEntry entryIndex="1" entryID="1" entryRefCnt="2147483647" tc="1" fc="268435199" fs="10" fst="0" cc="0" fest="0" feun="0" fesub="0" fesup="0" fn0="TI-Nspire Sans"&gt;&lt;/formatEntry&gt;
&lt;/formatManager&gt;
&lt;node name="1doc"&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="0" pp0="12" ucf="1"&gt;Architecture&lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;If &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;already &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;know &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;bit &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;about &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;programming &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;arm &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="14" ucf="1"&gt;architecture, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;skip &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;this &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;look &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;at &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;included &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;examples. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;In &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;assembler &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;(page &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;2) &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;write &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;your &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;programs. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;Use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;menu &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;save &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;load &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;programs, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;help &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;for &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;options, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;ctrl+^ &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;for &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;seeing &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;registers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;after &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;program &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;executed, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;ctrl+x^2 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;see &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;stack, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;esc &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;quit &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;out &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;windows. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;Page &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;3 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;instruction &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;searcher. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;enter &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instruction, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;get &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;description. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;Press &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;enter &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;do &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;search &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;description &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;press &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;help &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;get &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;back &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;entering &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;an &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instruction. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;TI-Nspire &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;uses &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;an &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;ARM &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;processor. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;Arm &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;processors &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;cannot &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;directly &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;access &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;memory. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;They &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;instead &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;operate &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;on &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;registers. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;On &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;this &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;processor, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;registers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;4 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;bytes &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;wide, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;32 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;bits, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;there &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;16 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;registers, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r0 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;r15. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;first &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;15 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;for &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;storing &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;data, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;but &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;last &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;one &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;special: &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;It &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;holds &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;address &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;where &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;processor &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;currently &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;executes &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;(+8 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;arm &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;mode,+4 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;thumb &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;mode). &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;That's &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;why &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;it's &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;called &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;program &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;counter, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;assembly &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;just &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;call &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;pc. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r14 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;special, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;it's &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;called &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;link &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;(lr). &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;When &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;jumping &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;function, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;tell &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;processor &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;address &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;next &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;instruction &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;lr. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;When &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;function &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;wants &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;return, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;jump &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;value &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;stored &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;lr. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r12 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;stack &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;pointer &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;(sp). &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;stack &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;save &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;temporary &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;data &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;function &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;if &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;run &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;out &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;registers, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;store &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;before &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;jump &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;function. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;That &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;way, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;get &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;off &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;stack &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;return. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;easiest &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;way &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;stack &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;via &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;push &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;pop &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="14" ucf="1"&gt;instructions. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;'push &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;{r1,r4-r8}' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;stores &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;registers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;4 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;8 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;on &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;stack. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;recover &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;values &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;using &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;'pop &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;{r1,r4-r8}'. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;IMPORTANT: &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;cannot &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;sp &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;push &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;pop &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instruction. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;Many &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;fundamental &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;math &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;operations &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;available &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;directly &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;on &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;processor, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;but &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;lacks &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;division &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;floating &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;point &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;numbers. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;Memory &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;be &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;accessed &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;by &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;special &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="14" ucf="1"&gt;instructions, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;which &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;one &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;as &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;address &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;load &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;store &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;another &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;register. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;actual &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instructions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;encoded &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;binary, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;but &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;there &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;assemblers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;(like &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;this &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;one) &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;that &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;recognize &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;mnemonics &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;translate &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;them &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;binary &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instructions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;for &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;you. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;Assemblers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;have &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;other &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;useful &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;features, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;like &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;calculating &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;offset &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;functions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;data. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;At &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;start &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;line, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;write &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;string &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;(no &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;numbers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;for &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;now, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;sorry) &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;':' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;string &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;as &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;label. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;If &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;string &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;right &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instruction, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;uses &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;label. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;'b &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;start' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;would &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;jump &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;called &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;'start'. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;Assembler &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;directives &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;start &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;with &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;'.'. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;most &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;important &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;directives &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;'.text', &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;'.data' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;(or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;'.section &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;text', &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;'.section &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;data'). &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;program &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;divided &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;sections. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;Before &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;write &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;anything, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;must &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;specify &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;where &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;it. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;Code &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;should &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;go &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;text &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;section. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;Data &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;data &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;section. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;In &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;this &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;assembler, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;there &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;'.entry'. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;have &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;somewhere &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;specify &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;at &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;which &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;execution &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;should &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;start. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;'.entry &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;start' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;makes &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;program &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;start &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;executing &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;at &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;'start'. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;'.word &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;number' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;puts &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;number &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;next &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;4 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;bytes. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;'dat: &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;.word &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;1' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;store &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;program &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;reference &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;using &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;'dat'. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;Mnemonics &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;for &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instructions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;are &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;usually &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;3 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;characters &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;long. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;For &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;arm &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;assembly, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;first &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;specify &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;destination &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;then &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;source &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;register(s). &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;'add &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r2, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r3' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;would &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;add &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r2 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r3 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;result &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;second &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;source &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;be &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;number: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;'add &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r2, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;#10' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;would &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;add &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;10 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r2 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;result &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;second &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;register: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;'mov &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;lsl &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;#2' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;would &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;left &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;by &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;2 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;bits &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;You &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;second &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;by &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;yet &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;another &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;register: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;'mov &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;lsl &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r2' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;would &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;left &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;by &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r2 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;bits &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;shifts &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;are: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;lsl &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;(logical &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;left) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;lsr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;(logical &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;right) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;asr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;(arithmetic &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;shift &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;right) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;ror &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;(rotate &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;right) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;Usually, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;destination &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;called &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rd &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;instruction &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="14" ucf="1"&gt;descriptions, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;sources &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rn &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rm. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;There &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;also &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;can't &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;access &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;normally, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;cpsr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;(current &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;program &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;status &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;register). &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;It &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;stores &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;flag &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;bits &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;specific &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instructions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;set, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;most &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;importantly &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;cmp &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;(compare). &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;After &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;every &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;instruction &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;you &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;can &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;specify &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;condition. &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;instruction &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;only &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;gets &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;executed &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;if &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;condition &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;met. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;conditions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;are: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;eq &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;(equals) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;ne &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;(not &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;equals) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lt &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;(less &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;than) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;gt &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;(greater &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;than) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;le &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;(less &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;than &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;equal) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;ge &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;(greater &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;than &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;equal) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;cs &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;(carry &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;set) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;cc &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;(carry &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;clear) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;hi &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;(unsigned &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;higher) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;ls &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;(unsigned &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;lower &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;equal) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;pl &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="16" ucf="1"&gt;(plus/positive) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;mi &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="17" ucf="1"&gt;(minus/negative) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;vs &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="11" ucf="1"&gt;(overflow) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;vc &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;(no &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;overflow) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;hs &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;(unsigned &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;greater &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;than &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;or &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;equal) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lo &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;(unsigned &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;less &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;than) &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;Example: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;cmp &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r0, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;#10 &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;addeq &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r1, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;r1, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;#1 &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;This &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;would &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;add &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r1 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;if &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;r0 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;is &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;equal &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;10. &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;The &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;most &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;useful &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="13" ucf="1"&gt;instructions &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;are: &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;add &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rn, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rm &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;sub &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rn, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rm &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;subtract &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;rsub &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;#0 &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;reverse &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;subtract &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;(rsub) &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;from &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;0, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;effectively &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;negates &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;number &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;mul &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rn, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rm &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;multiply &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;ldr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;[rn] &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rn &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;as &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;an &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;address, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;load &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;value &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rd &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;str &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;[rn] &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;use &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rn &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;as &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;an &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;address &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;put &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;value &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rd &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;it &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;cmp &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rn, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;#number &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;compare &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rn &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;number &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;set &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;condition &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;flags &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;mov &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;rd, &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rn &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;copy/move &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;value &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rn &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;rd &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;bx &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lr &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;return &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;from &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;a &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="9" ucf="1"&gt;function &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;using &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lr &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="2" ucf="1"&gt;b &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;jumps &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;'label' &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;bl &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;jumps &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;label &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;'label' &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;and &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;puts &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="8" ucf="1"&gt;address &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;next &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="12" ucf="1"&gt;instruction &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;into &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;lr &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;push &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;{register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;list} &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;pushes &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;value &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;registers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;list &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;to &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;stack &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;node name="1para"&gt;&lt;node name="1rtline"&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;pop &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;{register &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;list} &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="1" ucf="1"&gt; &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;pops &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="7" ucf="1"&gt;values &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;of &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="10" ucf="1"&gt;registers &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="3" ucf="1"&gt;in &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;list &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="5" ucf="1"&gt;from &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="4" ucf="1"&gt;the &lt;/leaf&gt;&lt;leaf name="1word" np="1" id0="1" pp0="6" ucf="1"&gt;stack &lt;/leaf&gt;&lt;/node&gt;&lt;/node&gt;&lt;/node&gt;
&lt;/r2dtotree&gt;	</np:fmtxt>
</wdgt>

</card>

<card clay="0" h1="1000" h2="0" w1="1000" w2="0">
<isDummyCard>0</isDummyCard>
<flag>0</flag>
<wdgt
    xmlns:sc="urn:TI.ScriptApp" type="TI.ScriptApp" ver="1.0">
    <sc:mFlags>1024</sc:mFlags>
    <sc:value>8</sc:value>
    <sc:cry>0</sc:cry>
    <sc:legal>none</sc:legal>
    <sc:schk>false</sc:schk>
    <sc:md>
        <sc:mde name="_VER" prop="134217728">1:1</sc:mde>
        <sc:mde name="TITLE" prop="2147549184">n-as</sc:mde>
        <sc:mde name="TARAL" prop="134217728">2:5</sc:mde>
    </sc:md>

    <sc:script version="33882629" id="1">
-- libraries: 1028 lines
ndless = true
as_lib_loaded = true
if nrequire then
	if pcall(nrequire,"n-as") == false then
		as_lib_loaded = false;
	end
else
	ndless = false
end






file_name = ""
file_dirty = false


asm_error_window = nil
main_window = nil
options_window = nil
no_ndless_dialog = nil
no_asm_lib_dialog = nil
file_name_dialog = nil
file_open_dialog = nil
registers_dialog = nil
stack_dialog = nil



checkbox_bin = nil
checkbox_hex = nil
checkbox_dec = nil



checkbox_swi = nil
checkbox_coproc = nil
checkbox_psr = nil


asm_error_label = nil
filename_label = nil
filename_textbox = nil

fileopen_canvas = nil



files = {}


registers_field = nil

stack_field = nil


editor = nil
function on.construction()
	toolpalette.register(menu)
	
	loadstring(var.recall("libs"))()
	
	no_ndless_dialog = window.window(320/2-150,240/2-50,300,50,false,"No Ndless")
	no_ndless_dialog.decoration:setColor(150,255,150)
	no_asm_lib_dialog = window.window(320/2-100,240/2-50,200,50,false,"No ASM lib")
	no_asm_lib_dialog.decoration:setColor(150,255,150)
	
	options_window = window.window(320/2-150,240/2-75,300,150,false,"Options")
	options_window.decoration:setColor(150,255,150)
	
	asm_error_window = window.window(320/2-150,240/2-50,300,50,false,"Assembler error")
	asm_error_window.decoration:setColor(255,150,150)
	
	file_name_dialog = window.window(320/2-150,240/2-75,300,150,false,"Save as")
	file_name_dialog.decoration:setColor(150,255,150)
	
	file_open_dialog = window.window(320/2-150,240/2-75,300,150,false,"Open")
	file_open_dialog.decoration:setColor(150,255,150)
	
	
	registers_dialog = window.window(320/2-150,240/2-75,300,150,false,"Registers")
	registers_dialog.decoration:setColor(150,255,150)
	
	stack_dialog = window.window(320/2-150,240/2-75,300,150,false,"Stack")
	stack_dialog.decoration:setColor(150,255,150)
	
	
	
	main_window = window.window(0,0,320,240,true,"")
	main_window:setFullscreen(true)
	
	editor = window.textEditor(0,20,"",317,211-20)
	editor:showLines(true)
	editor:registerFilter(editor_filter)
	main_window:add(editor)
	
	asm_error_label = window.textEditor(0,0,"",300,50)
	asm_error_label:setReadOnly(true)
	filename_label = window.label(1,1,"")
	
	
	filename_textbox = window.textField(10,10,"",290,20)
	
	file_name_dialog:add(filename_textbox)
	filename_textbox:registerFilter(filename_filter)
	
	
	
	
	fileopen_canvas = window.canvas(0,0,300,150,fileopen_draw,fileopen_event)
	fileopen_canvas.selected = 1
	fileopen_canvas.scroll = 0
	file_open_dialog:add(fileopen_canvas)
	
	
	registers_field = window.textEditor(0,0,"",300,150)
	registers_field:setReadOnly(true)
	registers_dialog:add(registers_field)
	registers_dialog:registerFilter(dialog_filter)
	registers_dialog:focus(registers_field)
	
	stack_field = window.textEditor(0,0,"",300,150)
	stack_field:setReadOnly(true)
	stack_dialog:add(stack_field)
	stack_dialog:registerFilter(dialog_filter)
	stack_dialog:focus(stack_field)
	
	
	main_window:add(filename_label)
	
	
	
	local l = window.label(10,10,"Ndless not installed")
	no_ndless_dialog:add(l)
	l:setFont("sansserif","r",12,no_ndless_dialog)
	l = window.label(5,30,"visit https://github.com/ndless-nspire/Ndless")
	no_ndless_dialog:add(l)
	l:setFont("sansserif","r",11,no_ndless_dialog)
	
	l = window.label(10,10,"n-as.luax.tns not found")
	no_asm_lib_dialog:add(l)
	l:setFont("sansserif","r",12,no_asm_lib_dialog)
	
	
	checkbox_swi = window.checkbox(10,130,10,10)
	checkbox_coproc = window.checkbox(110,130,10,10)
	checkbox_psr = window.checkbox(210,130,10,10)
	
	
	options_window:add(window.label(5,70,"These are instructions for advanced users."))
	options_window:add(window.label(5,90,"For safety, these options are initially disabled."))
	
	options_window:add(window.label(5,110,"swi"))
	options_window:add(window.label(90,110,"mrc/mcr"))
	options_window:add(window.label(190,110,"mrs/msr"))
	
	options_window:add(checkbox_swi)
	options_window:add(checkbox_coproc)
	options_window:add(checkbox_psr)
	
	options_window:registerFilter(dialog_filter)
	
	asm_error_window:add(asm_error_label)
	asm_error_window:registerFilter(dialog_filter)
	asm_error_window:focus(asm_error_label)
	
	if ndless == false then
		no_ndless_dialog:setVisible(true)
	else
		if as_lib_loaded == false then
			no_asm_lib_dialog:setVisible(true)
		end
	end
	
	window.focus(main_window)
	main_window:focus(editor)
	
	
	
	platform.window:invalidate()
end

function on.getSymbolList()
	return {"libs"}
end

function dialog_filter(e,d,a,p,w,l,m,x,y,win)
	if e == "esc" then
		win:setVisible(false)
		window.focus(main_window)
		window._damage(0,0,320,240)
		return true
	end
end
function editor_filter(e,d,a,p,w,l,m,x,y,win)
	if e == "cont" then
		if as_lib_loaded then
			local ret, err = asm.runString(editor:getText(),checkbox_swi:isChecked(),checkbox_psr:isChecked(),checkbox_coproc:isChecked())
			if ret == false then
				asm_error_label:setText(err,asm_error_window)
				asm_error_window:setVisible(true)
				window.focus(asm_error_window)
			else
				local regs_string = ""
				local regs = asm.getRegs()
				regs_string = regs_string..string.format("r%d=0x%x\n",0,regs[0])
				for i,j in ipairs(regs) do
					regs_string = regs_string..string.format("r%d=0x%x\n",i,j)
				end
				registers_field:setText(regs_string,registers_dialog)
				local stack_string = ""
				local stack = asm.getStack()
				for i,j in ipairs(stack) do
					stack_string = stack_string..string.format("%d: 0x%x\n",i,j)
				end
				stack_field:setText(stack_string,stack_dialog)
			end
		end
		return true;
	end
	if e == input.int then
		editor:event(":",false,false,true,false,1,false,0,0,main_window)
		return true
	end
	if e == input.deriv then
		editor:event("#",false,false,false,false,1,false,0,0,main_window)
		return true
	end
	if e == "help" then
		options_window:setVisible(true)
		window.focus(options_window)
		return true
	end
	if e == input.root then
		registers_dialog:setVisible(true)
		window.focus(registers_dialog)
		return true
	end
	if e == "exp(" then
		editor:event("{",false,false,false,false,1,false,0,0,main_window)
		return true
	end
	if e == "10^(" then
		editor:event("}",false,false,false,false,1,false,0,0,main_window)
		return true
	end
	if e == input.mathmin then
		editor:event(";",false,false,false,false,1,false,0,0,main_window)
		return true
	end
	if e == input.sqrt then
		stack_dialog:setVisible(true)
		window.focus(stack_dialog)
		return true
	end
	if l == 1 or e == "cut" or e == "paste" or e == "bsp" or e == "enter" then
		file_dirty = true
		filename_label:setText(file_name.."*",main_window)
	end
	return false;
end

function filename_filter(e,d,a,p,w,l,m,x,y,win)
	if e == "enter" then
		file_name_dialog:setVisible(false)
		window.focus(main_window)
		file_name = filename_textbox:getText()
		filename_textbox:setText("")
		save_file()
		window._damage(0,0,320,240)
		return true
	end
	if e == "esc" then
		file_name_dialog:setVisible(false)
		window.focus(main_window)
		filename_textbox:setText("")
		window._damage(0,0,320,240)
		return true
	end
	return false
end

function on.save()
	return {file_name,file_dirty,checkbox_swi:isChecked(),checkbox_coproc:isChecked(),checkbox_psr:isChecked(),files,editor:getText()};
end

function on.restore(s)
	file_name = s[1]
	file_dirty = s[2]
	if file_dirty then
		filename_label:setText(file_name.."*",main_window)
	else
		filename_label:setText(file_name,main_window)
	end
	checkbox_swi:check(s[3])
	checkbox_coproc:check(s[4])
	checkbox_psr:check(s[5])
	files = s[6]
	editor:setText(s[7])
	window._damage(0,0,320,240)
end


function fileopen_draw(self,w,gc)
	local th = self.x
	gc:setColorRGB(0,0,0)
	for i = self.scroll, #files do
		if th &gt; self.height then
			break
		end
		if files[i] ~= nil then
			gc:setColorRGB(0,0,0)
			if i == self.selected then
				gc:setColorRGB(0,255,0)
			end
			gc:drawString(files[i][1],w.x+self.x,w.y+th,"top")
			th = th + gc:getStringHeight(files[i][1])
		end
	end
end
function fileopen_event(self,e,d,a,p,w,l,m,x,y,win)
	if e == "up" and self.selected ~= 1 then
		self.selected = self.selected -1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == "down" and self.selected &lt; #files then
		self.selected = self.selected +1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == "enter" then
		file_name = files[self.selected][1]
		filename_label:setText(file_name,main_window)
		editor:setText(files[self.selected][2])
		file_open_dialog:setVisible(false)
		window.focus(main_window)
		window._damage(0,0,320,240)
	end
	if e == "clear" then
		table.remove(files,self.selected)
		self.selected = 1
		window._damage(win.x+self.x,win.y+self.y,self.width,self.height)
	end
	if e == "esc" then
		file_open_dialog:setVisible(false)
		window.focus(main_window)
		window._damage(0,0,320,240)
	end
end




















function open_file()
	fileopen_canvas.selected = 1
	fileopen_canvas.scroll = 0
	file_open_dialog:setVisible(true)
	window.focus(file_open_dialog)
	file_open_dialog:focus(fileopen_canvas)
end


function save_file()
	if string.len(file_name) == 0 then
		save_as_file()
		return
	end
	file_dirty = false
	filename_label:setText(file_name,main_window)
	--files[file_name] = editor:getText()
	local found = false
	for i,j in ipairs(files) do
		if j[1] == file_name then
			j[2] = editor:getText()
			found = true
			break
		end
	end
	if not found then
		table.insert(files,{file_name,editor:getText()})
	end
	window._damage(0,0,320,240)
end

function save_as_file()
	file_name_dialog:setVisible(true)
	file_name_dialog:focus(filename_textbox)
	window.focus(file_name_dialog)
end


menu = {
	{ "File",
		{"open",open_file},
		{"save",save_file},
		{"save as",save_as_file}
	}
}
    </sc:script>
</wdgt>


</card>

<card clay="0" h1="1000" h2="0" w1="1000" w2="0">
<isDummyCard>0</isDummyCard>
<flag>0</flag>
<wdgt
    xmlns:sc="urn:TI.ScriptApp" type="TI.ScriptApp" ver="1.0">
    <sc:mFlags>1024</sc:mFlags>
    <sc:value>8</sc:value>
    <sc:cry>0</sc:cry>
    <sc:legal>none</sc:legal>
    <sc:schk>false</sc:schk>
    <sc:md>
        <sc:mde name="_VER" prop="134217728">1:1</sc:mde>
        <sc:mde name="TITLE" prop="2147549184">n-as</sc:mde>
        <sc:mde name="TARAL" prop="134217728">2:5</sc:mde>
    </sc:md>

    <sc:script version="33882629" id="1">
-- libraries: 1028 lines



main_window = nil
textbox = nil
textfield = nil

instructions = {
mov = "mov rd, rn\nMoves the value of register rn into register rd.\n\nmov rd, #number\nMoves the number into rd.\nThe number has to be 8 bits wide, and the 8 bits\ncan be anywhere in the\nfull 4 bytes of the register."




}



function on.construction()
	loadstring(var.recall("libs"))()
	
	main_window = window.window(0,0,320,240,true,"")
	main_window:setFullscreen(true)
	
	textbox = window.textField(5,5,"",200,20)
	
	textfield = window.textEditor(0,30,"",317,211-30)
	textfield:setReadOnly(true)
	
	
	textbox:registerFilter(textbox_filter)
	textfield:registerFilter(textfield_filter)
	
	main_window:add(textbox)
	main_window:add(textfield)
	
	main_window:focus(textbox)
	window.focus(main_window)
	
	platform.window:invalidate()
end


function on.getSymbolList()
	return {"libs"}
end


function textbox_filter(e,d,a,p,w,l,m,x,y,win)
	if e == "enter" then
		for i,j in pairs(instructions) do
			if i == textbox:getText() then
				textfield:setText(j)
				main_window:focus(textfield)
				window._damage(0,0,320,240)
			end
		end
		return true
	end
	window._damage(0,0,320,240)
end

function textfield_filter(e,d,a,p,w,l,m,x,y,win)
	if e == "help" then
		main_window:focus(textbox)
		return true
	end
end








    </sc:script>
</wdgt>


</card>

</prob>
